import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import axios from "axios";

const initialState = {
  channels: [],
};

export const fetchChannelsAsync = createAsyncThunk(
  "teamspeak/fetchChannels",
  async () => {
    const channels =
      (await axios.get("http://localhost:8081/teamspeak"))?.data || [];
    return channels;
  }
);

export const teamspeakSlice = createSlice({
  name: "teamspeak",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder.addCase(fetchChannelsAsync.fulfilled, (state, action) => {
      state.channels = action.payload;
    });
  },
});

export const {} = teamspeakSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectChannels = (state) => state.teamspeak.channels;

export default teamspeakSlice.reducer;
